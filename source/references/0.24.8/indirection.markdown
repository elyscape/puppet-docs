---
canonical: "/references/latest/indirection.html"
layout: default
title: Indirection Reference
---


Indirection Reference
=====


<p><strong>This page is autogenerated; any changes will get overwritten</strong> <em>(last generated on Thu Feb 24 17:23:04 -0800 2011)</em></p>

<p>This is the list of all indirections, their associated terminus classes, and how you select between them.</p>
<p>In general, the appropriate terminus class is selected by the application for you (e.g., <code>puppetd</code> would always use the <code>rest</code>
terminus for most of its indirected classes), but some classes are tunable via normal settings.  These will have <code>terminus setting</code>
documentation listed with them.</p>

----------------

### catalog


#### compiler

<p>Puppet's catalog compilation interface, and its back-end is
Puppet's compiler</p>


#### yaml

<p>Store catalogs as flat files, serialized using YAML.</p>



----------------

### checksum


#### file

<p>Store files in a directory set based on their checksums.</p>



----------------

### facts


#### facter

<p>Retrieve facts from Facter.  This provides a somewhat abstract interface
between Puppet and Facter.  It's only <code>somewhat</code> abstract because it always
returns the local host's facts, regardless of what you attempt to find.</p>


#### memory

<p>Keep track of facts in memory but nowhere else.  This is used for
one-time compiles, such as what the stand-alone <code>puppet</code> does.
To use this terminus, you must load it with the data you want it
to contain.</p>


#### yaml

<p>Store client facts as flat files, serialized using YAML, or
return deserialized facts from disk.</p>



----------------

### file_content


#### file

<p>Retrieve file contents from disk.</p>


#### file_server

<p>Retrieve file contents using Puppet's fileserver.</p>


#### modules

<p>Retrieve file contents from modules.</p>


#### rest

<p>Retrieve file contents via a REST HTTP interface.</p>



----------------

### file_metadata


#### file

<p>Retrieve file metadata directly from the local filesystem.</p>


#### file_server

<p>Retrieve file metadata using Puppet's fileserver.</p>


#### modules

<p>Retrieve file metadata from modules.</p>


#### rest

<p>Retrieve file metadata via a REST HTTP interface.</p>



----------------

### node

<p>Where to find node information.
A node is composed of its name, its facts, and its environment.</p>
<ul>
<li><strong>Terminus Setting</strong>: node_terminus</li>
</ul>

#### exec

<p>Call an external program to get node information.  See
the <a href="http://docs.puppetlabs.com/guides/external_nodes.html">External Nodes</a> page for more information.</p>


#### ldap

<p>Search in LDAP for node configuration information.  See
the <a href="http://projects.puppetlabs.com/projects/puppet/wiki/Ldap_Nodes">LDAP Nodes</a> page for more information.  This will first
search for whatever the certificate name is, then (if that name
contains a '.') for the short name, then 'default'.</p>


#### memory

<p>Keep track of nodes in memory but nowhere else.  This is used for
one-time compiles, such as what the stand-alone <code>puppet</code> does.
To use this terminus, you must load it with the data you want it
to contain; it is only useful for developers and should generally not
be chosen by a normal user.</p>


#### plain

<p>Always return an empty node object. Assumes you keep track of nodes
in flat file manifests.  You should use it when you don't have some other,
functional source you want to use, as the compiler will not work without a
valid node terminus.</p>
<p>Note that class is responsible for merging the node's facts into the
node instance before it is returned.</p>


#### rest

<p>This will eventually be a REST-based mechanism for finding nodes.  It is currently non-functional.</p>


#### yaml

<p>Store node information as flat files, serialized using YAML,
or deserialize stored YAML nodes.</p>



----------------

### report


#### processor

<p>Puppet's report processor.  Processes the report with each of
the report types listed in the 'reports' setting.</p>
<hr />
<p><em>This page autogenerated on Thu Feb 24 17:23:04 -0800 2011</em></p>
